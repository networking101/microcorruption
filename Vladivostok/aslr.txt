		0000           rrc	pc
		3140 0044      mov	#0x4400, sp
		1542 5c01      mov	&0x015c, r5
		75f3           and.b	#-0x1, r5
		35d0 085a      bis	#0x5a08, r5
		3f40 0000      clr	r15
		0f93           tst	r15
		0724           jz	$+0x10
		8245 5c01      mov	r5, &0x015c
		2f83           decd	r15
		9f4f 704a 0024 mov	0x4a70(r15), 0x2400(r15)
		f923           jnz	$-0xc
		3f40 3200      mov	#0x32, r15
		0f93           tst	r15
		0624           jz	$+0xe
		8245 5c01      mov	r5, &0x015c
		1f83           dec	r15
		cf43 0024      mov.b	#0x0, 0x2400(r15)
		fa23           jnz	$-0xa
		b012 1c4a      call	#0x4a1c
		0b4f           mov	r15, r11
		3bf0 fe7f      and	#0x7ffe, r11
		3b50 0060      add	#0x6000, r11
		b012 1c4a      call	#0x4a1c
		0a4f           mov	r15, r10
		3012 0010      push	#0x1000
		3012 0044      push	#0x4400
		0b12           push	r11
		b012 e849      call	#0x49e8
		3150 0600      add	#0x6, sp
		0f4a           mov	r10, r15
		3ff0 fe0f      and	#0xffe, r15
		0e4b           mov	r11, r14
		0e8f           sub	r15, r14
		3e50 00ff      add	#0xff00, r14
		0d4b           mov	r11, r13
		3d50 5c03      add	#0x35c, r13
		014e           mov	r14, sp
		0f4b           mov	r11, r15
		8d12           call	r13
		32d0 f000      bis	#0xf0, sr
		fd3f           jmp	$-0x4
		3040 6e4a      br	#0x4a6e

+82		login?:
		0b12           push	r11
		0a12           push	r10
		3182           sub	#0x8, sp
		0c4f           mov	r15, r12
		3c50 6a03      add	#0x36a, r12				# r12 = printf
		814c 0200      mov	r12, 0x2(sp)
		0e43           clr	r14
		# clear 0x4400 memory
+94		ce43 0044      mov.b	#0x0, 0x4400(r14)
		1e53           inc	r14
		3e90 0010      cmp	#0x1000, r14
		fa23           jnz	$-0xa					# +94
+a0		f240 5500 0224 mov.b	#0x55, &0x2402				# "Username (8 char max):"
		f240 7300 0324 mov.b	#0x73, &0x2403
		f240 6500 0424 mov.b	#0x65, &0x2404
		f240 7200 0524 mov.b	#0x72, &0x2405
		f240 6e00 0624 mov.b	#0x6e, &0x2406
		f240 6100 0724 mov.b	#0x61, &0x2407
		f240 6d00 0824 mov.b	#0x6d, &0x2408
		f240 6500 0924 mov.b	#0x65, &0x2409
		f240 2000 0a24 mov.b	#0x20, &0x240a
		f240 2800 0b24 mov.b	#0x28, &0x240b
		f240 3800 0c24 mov.b	#0x38, &0x240c
		f240 2000 0d24 mov.b	#0x20, &0x240d
		f240 6300 0e24 mov.b	#0x63, &0x240e
		f240 6800 0f24 mov.b	#0x68, &0x240f
		f240 6100 1024 mov.b	#0x61, &0x2410
		f240 7200 1124 mov.b	#0x72, &0x2411
		f240 2000 1224 mov.b	#0x20, &0x2412
		f240 6d00 1324 mov.b	#0x6d, &0x2413
		f240 6100 1424 mov.b	#0x61, &0x2414
		f240 7800 1524 mov.b	#0x78, &0x2415
		f240 2900 1624 mov.b	#0x29, &0x2416
		f240 3a00 1724 mov.b	#0x3a, &0x2417
+124		c243 1824      mov.b	#0x0, &0x2418
+128		b240 1700 0024 mov	#0x17, &0x2400
		3e40 0224      mov	#0x2402, r14
		0b43           clr	r11
+134		103c           jmp	$+0x22					# +156
+136		1e53           inc	r14
		8d11           sxt	r13
		0b12           push	r11
		0d12           push	r13
		0b12           push	r11
		0012           push	pc
		0212           push	sr
		0f4b           mov	r11, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10					# print "Username" string
		3241           pop	sr
		3152           add	#0x8, sp
+156		6d4e           mov.b	@r14, r13				# r14 = "Username" string
		4d93           tst.b	r13
		ed23           jnz	$-0x24					# +136
		0e43           clr	r14
		3d40 0a00      mov	#0xa, r13
		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10					# print newline
		3241           pop	sr
		3152           add	#0x8, sp
		3d50 3400      add	#0x34, r13
		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10					# print ">"
+19a		3241           pop	sr
		3152           add	#0x8, sp
+19e		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+1b2		b012 1000      call	#0x10					# print ">"
		3241           pop	sr
		3152           add	#0x8, sp
+1ba		3a42           mov	#0x8, r10				# read 8 bytes
		3b40 2624      mov	#0x2426, r11				# write user input to 0x2426
		2d43           mov	#0x2, r13
		0a12           push	r10
		0b12           push	r11
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+1d6		b012 1000      call	#0x10					# getsn(0x2426, 8)
		3241           pop	sr
		3152           add	#0x8, sp
+1de		c24e 2e24      mov.b	r14, &0x242e				# terminate username string
		0b12           push	r11
+1e4		8c12           call	r12					# printf(username string)
+1e6		2153           incd	sp
		0f4b           mov	r11, r15
+1ea		033c           jmp	$+0x8
# clear buffer at 0x2426
+1ec		cf43 0000      mov.b	#0x0, 0x0(r15)
		1f53           inc	r15
+1f2		3f90 3224      cmp	#0x2432, r15
		fa23           jnz	$-0xa					# +1ec
+1f8		f240 0a00 0224 mov.b	#0xa, &0x2402				# "\nPassword:"
		f240 5000 0324 mov.b	#0x50, &0x2403
		f240 6100 0424 mov.b	#0x61, &0x2404
		f240 7300 0524 mov.b	#0x73, &0x2405
		f240 7300 0624 mov.b	#0x73, &0x2406
		f240 7700 0724 mov.b	#0x77, &0x2407
		f240 6f00 0824 mov.b	#0x6f, &0x2408
		f240 7200 0924 mov.b	#0x72, &0x2409
		f240 6400 0a24 mov.b	#0x64, &0x240a
		f240 3a00 0b24 mov.b	#0x3a, &0x240b
		c243 0c24      mov.b	#0x0, &0x240c
+238		3e40 0224      mov	#0x2402, r14
		0c43           clr	r12
		103c           jmp	$+0x22					# +260
+240		1e53           inc	r14
		8d11           sxt	r13
		0c12           push	r12
		0d12           push	r13
		0c12           push	r12
		0012           push	pc
		0212           push	sr
		0f4c           mov	r12, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+258		b012 1000      call	#0x10					# print "Password:"
		3241           pop	sr
		3152           add	#0x8, sp
+260		6d4e           mov.b	@r14, r13
		4d93           tst.b	r13
		ed23           jnz	$-0x24					# +240
+266		0e43           clr	r14
		3d40 0a00      mov	#0xa, r13
		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+280		b012 1000      call	#0x10					# print newline
		3241           pop	sr
		3152           add	#0x8, sp
		0b41           mov	sp, r11
		2b52           add	#0x4, r11
		3c40 1400      mov	#0x14, r12
		2d43           mov	#0x2, r13
		0c12           push	r12
		0b12           push	r11
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+2a6		b012 1000      call	#0x10					# getsn(0x8cd8, 0x14)
+2aa		3241           pop	sr
		3152           add	#0x8, sp
		3d50 7c00      add	#0x7c, r13
		0c41           mov	sp, r12
		0c12           push	r12
		0b12           push	r11
		0d12           push	r13
+2ba		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+2c8		b012 1000      call	#0x10					# INT(0x7e, password buffer)
		3241           pop	sr
		3152           add	#0x8, sp
+2d0		f240 5700 0224 mov.b	#0x57, &0x2402				# "Wrong!"
		f240 7200 0324 mov.b	#0x72, &0x2403
		f240 6f00 0424 mov.b	#0x6f, &0x2404
		f240 6e00 0524 mov.b	#0x6e, &0x2405
		f240 6700 0624 mov.b	#0x67, &0x2406
		f240 2100 0724 mov.b	#0x21, &0x2407
		c24e 0824      mov.b	r14, &0x2408
+2f8		b240 0700 0024 mov	#0x7, &0x2400
		3d40 0224      mov	#0x2402, r13
		103c           jmp	$+0x22					# +324
+304		1d53           inc	r13
		8c11           sxt	r12
		0e12           push	r14
		0c12           push	r12
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10					# print "Wrong!"
		3241           pop	sr
		3152           add	#0x8, sp
+324		6c4d           mov.b	@r13, r12
		4c93           tst.b	r12
+328		ed23           jnz	$-0x24					# +304
+32a		0e43           clr	r14
		3d40 0a00      mov	#0xa, r13
		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
+344		b012 1000      call	#0x10					# print newline
+348		3241           pop	sr
		3152           add	#0x8, sp
		0e41           mov	sp, r14
		2e53           incd	r14
		0e12           push	r14
		3f41           pop	r15
		3152           add	#0x8, sp
		3a41           pop	r10
		3b41           pop	r11
+35a		3041           ret						# password buff + 8

+35c		main:
		0e4f           mov	r15, r14
		3e50 8200      add	#0x82, r14
		8e12           call	r14					# jump to login
		32d0 f000      bis	#0xf0, sr
		3041           ret

+36a		printf:
		0b12           push	r11
		0a12           push	r10
		0912           push	r9
		0812           push	r8
		0712           push	r7
		0612           push	r6
		0412           push	r4
		0441           mov	sp, r4
		3450 0e00      add	#0xe, r4
+37e		2183           decd	sp	
		1a44 0200      mov	0x2(r4), r10				# move username buffer pointer from stack to r10
		8441 f0ff      mov	sp, -0x10(r4)
		0f4a           mov	r10, r15
		0e43           clr	r14
+38c		0b3c           jmp	$+0x18					# +3a4
+38e		1f53           inc	r15
		7d90 2500      cmp.b	#0x25, r13
		0720           jnz	$+0x10
		6d9f           cmp.b	@r15, r13
		0320           jnz	$+0x8
		1f53           inc	r15
		0d43           clr	r13
		013c           jmp	$+0x4
		1d43           mov	#0x1, r13
		0e5d           add	r13, r14
+3a4		6d4f           mov.b	@r15, r13
		4d93           tst.b	r13
+3a8		f223           jnz	$-0x1a					# +38e
		0f4e           mov	r14, r15
		0f5f           add	r15, r15
		2f53           incd	r15
		018f           sub	r15, sp
		0b41           mov	sp, r11
		0c44           mov	r4, r12
		2c52           add	#0x4, r12
		0f41           mov	sp, r15
		0d43           clr	r13
		053c           jmp	$+0xc
		af4c 0000      mov	@r12, 0x0(r15)
		1d53           inc	r13
		2f53           incd	r15
		2c53           incd	r12
		0d9e           cmp	r14, r13
		f93b           jl	$-0xc
		0c43           clr	r12
		3640 0900      mov	#0x9, r6
		0d4c           mov	r12, r13
		3740 2500      mov	#0x25, r7
		7b3c           jmp	$+0xf8
		1a53           inc	r10
		7f90 2500      cmp.b	#0x25, r15
		1224           jz	$+0x26
		1c53           inc	r12
		4e4f           mov.b	r15, r14
		8e11           sxt	r14
		0d12           push	r13
		0e12           push	r14
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		653c           jmp	$+0xcc
		6e4a           mov.b	@r10, r14
		4e9f           cmp.b	r15, r14
		1020           jnz	$+0x22
		1c53           inc	r12
		0d12           push	r13
		0712           push	r7
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		503c           jmp	$+0xa2
		7e90 7300      cmp.b	#0x73, r14
		1820           jnz	$+0x32
		2e4b           mov	@r11, r14
		0843           clr	r8
		113c           jmp	$+0x24
		1c53           inc	r12
		1e53           inc	r14
		8911           sxt	r9
		0812           push	r8
		0912           push	r9
		0812           push	r8
		0012           push	pc
		0212           push	sr
		0f48           mov	r8, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		694e           mov.b	@r14, r9
		4993           tst.b	r9
		ec23           jnz	$-0x26
		353c           jmp	$+0x6c
		7e90 7800      cmp.b	#0x78, r14
		2c20           jnz	$+0x5a
		2e4b           mov	@r11, r14
		2942           mov	#0x4, r9
		243c           jmp	$+0x4a
		0f4e           mov	r14, r15
		8f10           swpb	r15
		3ff0 ff00      and	#0xff, r15
		12c3           clrc
		0f10           rrc	r15
		0f11           rra	r15
		0f11           rra	r15
		0f11           rra	r15
		069f           cmp	r15, r6
		0438           jl	$+0xa
		084f           mov	r15, r8
		3850 3000      add	#0x30, r8
		033c           jmp	$+0x8
		084f           mov	r15, r8
		3850 5700      add	#0x57, r8
		0d12           push	r13
		0812           push	r8
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		0e5e           add	r14, r14
		0e5e           add	r14, r14
		0e5e           add	r14, r14
		0e5e           add	r14, r14
		3953           add	#-0x1, r9
		3993           cmp	#-0x1, r9
		d923           jnz	$-0x4c
		2c52           add	#0x4, r12
		063c           jmp	$+0xe
		7e90 6e00      cmp.b	#0x6e, r14
		0320           jnz	$+0x8
		2f4b           mov	@r11, r15
		8f4c 0000      mov	r12, 0x0(r15)
		2b53           incd	r11
		1a53           inc	r10
		6f4a           mov.b	@r10, r15
		4f93           tst.b	r15
		8223           jnz	$-0xfa
		1144 f0ff      mov	-0x10(r4), sp
		2153           incd	sp
		3441           pop	r4
		3641           pop	r6
		3741           pop	r7
		3841           pop	r8
		3941           pop	r9
		3a41           pop	r10
		3b41           pop	r11
		3041           ret
		1e41 0200      mov	0x2(sp), r14
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr					# This is where we want to jump to
		3041           ret
		0c4f           mov	r15, r12
		0d12           push	r13
		0e12           push	r14
		0c12           push	r12
		0012           push	pc
		0212           push	sr
		0f4c           mov	r12, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		3041           ret
		0e4f           mov	r15, r14
		0d43           clr	r13
		0d12           push	r13
		0e12           push	r14
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		0f4e           mov	r14, r15
		3041           ret
		2183           decd	sp
		0d43           clr	r13
		1e43           mov	#0x1, r14
		0c41           mov	sp, r12
		0d12           push	r13
		0c12           push	r12
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		6f41           mov.b	@sp, r15
		8f11           sxt	r15
		2153           incd	sp
		3041           ret
		0d4f           mov	r15, r13
		2c43           mov	#0x2, r12
		0e12           push	r14
		0d12           push	r13
		0c12           push	r12
		0012           push	pc
		0212           push	sr
		0f4c           mov	r12, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		3041           ret
		0e4f           mov	r15, r14
		0c43           clr	r12
		103c           jmp	$+0x22
		1e53           inc	r14
		8d11           sxt	r13
		0c12           push	r12
		0d12           push	r13
		0c12           push	r12
		0012           push	pc
		0212           push	sr
		0f4c           mov	r12, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		6d4e           mov.b	@r14, r13
		4d93           tst.b	r13
		ed23           jnz	$-0x24
		0e43           clr	r14
		3d40 0a00      mov	#0xa, r13
		0e12           push	r14
		0d12           push	r13
		0e12           push	r14
		0012           push	pc
		0212           push	sr
		0f4e           mov	r14, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		0f4e           mov	r14, r15
		3041           ret
		1c41 0600      mov	0x6(sp), r12
		0f43           clr	r15
		093c           jmp	$+0x14
		1e41 0200      mov	0x2(sp), r14
		0e5f           add	r15, r14
		1d41 0400      mov	0x4(sp), r13
		0d5f           add	r15, r13
		ee4d 0000      mov.b	@r13, 0x0(r14)
		1f53           inc	r15
		0f9c           cmp	r12, r15
		f523           jnz	$-0x14
		3041           ret
		0d43           clr	r13
		053c           jmp	$+0xc
		0c4f           mov	r15, r12
		0c5d           add	r13, r12
		cc43 0000      mov.b	#0x0, 0x0(r12)
		1d53           inc	r13
		0d9e           cmp	r14, r13
		f923           jnz	$-0xc
		3041           ret
		0e43           clr	r14
		3d40 2000      mov	#0x20, r13
		0e12           push	r14
		0e12           push	r14
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		0f4f           mov	r15, r15
		3041           ret
		2183           decd	sp
		0e4f           mov	r15, r14
		3d40 7e00      mov	#0x7e, r13
		0c41           mov	sp, r12
		0c12           push	r12
		0e12           push	r14
		0d12           push	r13
		0012           push	pc
		0212           push	sr
		0f4d           mov	r13, r15
		8f10           swpb	r15
		024f           mov	r15, sr
		32d0 0080      bis	#0x8000, sr
		b012 1000      call	#0x10
		3241           pop	sr
		3152           add	#0x8, sp
		0f43           clr	r15
		2153           incd	sp
		3041           ret
		0013           reti	pc
+670		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
		0000           rrc	pc
